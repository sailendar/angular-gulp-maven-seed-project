<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>1.0.0</modelVersion>
	<groupId>angular.gulp.maven</groupId>
	<artifactId>seed-starter</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>Project Name</name>
	<description>Project Description</description>
	<url>https://github.com/sailendar/angular-gulp-maven-seed-project</url>

	<properties>
		<scm.write>https://github.com/sailendar/angular-gulp-maven-seed-project.git</scm.write>
		<scm.read>https://github.com/sailendar/angular-gulp-maven-seed-project.git</scm.read>
	</properties>

	<profiles>
		<profile>
			<id>Windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<npm>npm.cmd</npm>
				<bower>./node_modules/.bin/bower-files.cmd</bower>
				<gulp>./node_modules/.bin/gulp.cmd</gulp>
			</properties>
		</profile>
		<profile>
			<id>Linux</id>
			<activation>
				<os>
					<family>Linux</family>
				</os>
			</activation>
			<properties>
				<npm>npm</npm>
				<bower>./node_modules/.bin/bower-files</bower>
				<gulp>./node_modules/.bin/gulp</gulp>
			</properties>
		</profile>
		<profile>
			<id>Mac</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<npm>npm</npm>
				<bower>./node_modules/.bin/bower-files</bower>
				<gulp>./node_modules/.bin/gulp</gulp>
			</properties>
		</profile>
		<!-- This profile skips all gulp tasks except the less compiler and the 
			JavaScript Linter -->
		<!-- Use this profile for development -->
		<!-- Example: execute the Develop profile from command line with "mvn clean 
			install -PDevelop" -->
		<profile>
			<id>Develop</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>gulp-build</id>
								<phase>prepare-package</phase>
								<configuration>
									<executable>${gulp}</executable>
									<arguments>
										<argument>build:dev</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webResources>
								<webResource>
									<targetPath>WEB-INF/angular-ui</targetPath>
									<directory>${basedir}/src/main/webapp/WEB-INF/angular-ui</directory>
									<filtering>false</filtering>
								</webResource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
            <artifactId>maven-toolchains-plugin</artifactId>
            <configuration>
               <toolchains>
                  <jdk>
                     <version>${java.target.version}</version>
                  </jdk>
               </toolchains>
            </configuration>
         </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<scm>
		<connection>scm:git:${scm.read}</connection>
		<developerConnection>scm:git:${scm.write}</developerConnection>
		<tag>property-management-system-interface-support-1.0.0</tag>
	</scm>

	
	<build>
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
						<manifestEntries>
							<WebLogic-Application-Version>${project.version}</WebLogic-Application-Version>
						</manifestEntries>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<webResources>
						<webResource>
							<targetPath>WEB-INF/angular-ui</targetPath>
							<directory>${basedir}/target/dist</directory>
							<filtering>false</filtering>
						</webResource>
					</webResources>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>Copy dependencies to lib folder</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/src/main/webapp/WEB-INF/lib</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeArtifactIds>junit,hamcrest-core</excludeArtifactIds>
							<excludeScope>provided</excludeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/WEB-INF</directory>
							<includes>
								<include>**/lib/**</include>
								<include>**/classes/**</include>
							</includes>
							<excludes>
								<exclude>**/angular-ui/**</exclude>
							</excludes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>node-install</id>
						<phase>test</phase>
						<configuration>
							<executable>${npm}</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>

					<execution>
						<id>bower-install</id>
						<phase>test</phase>
						<configuration>
							<executable>${bower}</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>

					<execution>
						<id>gulp-build</id>
						<phase>prepare-package</phase>
						<configuration>
							<executable>${gulp}</executable>
							<arguments>
								<argument>build:prod</argument>
								<argument>--version</argument> <!--first part of argument, with a space in between -->
								<argument>${project.version}</argument> <!-- second part of the version argument -->
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.4.2</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-gitexe</artifactId>
						<version>1.9.2</version>
					</dependency>
				</dependencies>
			</plugin>


		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.7,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>



</project>